server {
  listen 80;
  server_name _;

  root /usr/share/nginx/html/green-nerds.io;
  index index.html;

  # --------------------------
  # 1) COMPRESSION (texte)
  # --------------------------
  # Active gzip pour réduire le poids des réponses texte (HTML/CSS/JS/SVG/JSON/…)
  gzip on;

  # Compromis perf/ratio (3–6 raisonnable ; 5 est un bon défaut)
  gzip_comp_level 5;

  # Évite de compresser les toutes petites réponses (< 1 Ko)
  gzip_min_length 1024;

  # Autorise la compression même si le serveur est derrière un proxy
  gzip_proxied any;

  # Ajoute "Vary: Accept-Encoding" pour un cache correct (différencie gzip/non-gzip)
  gzip_vary on;

  # Liste explicite des types compressés (HTML est déjà compressé par défaut)
  gzip_types
    text/plain
    text/css
    text/javascript
    application/javascript
    application/json
    application/xml
    image/svg+xml
    font/ttf
    font/otf
    application/vnd.ms-fontobject;

  # (Option) Si tu buildes Nginx avec Brotli, préfère brotli pour un meilleur ratio :
  # brotli on;
  # brotli_comp_level 5;
  # brotli_types text/plain text/css application/javascript application/json image/svg+xml;

  # ------------------------------------------------
  # 2) CACHE HTTP côté client (selon type de fichier)
  # ------------------------------------------------
  # Idée : longue durée pour assets "versionnés" (hash/fingerprint), moyen pour images,
  # très court pour HTML (en atelier, pour voir vite l’effet d’un changement de config).
  #
  # NB : On ne touche pas au contenu => on ne "fingerprintra" pas ici, mais cette règle
  # reste une bonne pratique si les fichiers sont déjà nommés avec hash.

  # CSS/JS/Fonts/SVG/JSON/ICO/Source maps → 1 an + immutable
  location ~* \.(?:css|js|woff2?|svg|json|ico|map)$ {
    # Public = cacheable par tous, "immutable" = évite les revalidations si fichier versionné
    add_header Cache-Control "public, max-age=31536000, immutable";
    access_log off;        # bruit de log inutile pour des statiques
    try_files $uri =404;   # sert le fichier tel quel, sinon 404 (pas de fallback magique)
  }

  # Images → 30 jours (assez long mais pas immutable car souvent on remplace une image sans changer le nom)
  location ~* \.(?:png|jpg|jpeg|gif|webp|avif)$ {
    add_header Cache-Control "public, max-age=2592000";
    access_log off;
    try_files $uri =404;
  }

  # HTML → très court pour l’atelier (rafraîchit vite EcoIndex / évite un cache trop agressif)
  # En prod, on mettrait souvent "no-cache" (revalidation) ou un TTL plus long si site purement statique.
  location ~* \.(?:html?)$ {
    add_header Cache-Control "public, max-age=30";
    try_files $uri =404;
  }

  # Si CDN récent :
  # add_header Cache-Control "public, max-age=31536000, immutable, stale-while-revalidate=60, stale-if-error=600";

  location / {
    try_files $uri $uri/ =404;
  }

  error_page 404 /404.html;
  location = /404.html { internal; }

  # ------------------------------------------------
  # 4) REMARQUES
  # ------------------------------------------------
  # - Les gains EcoIndex ici viennent surtout de la COMPRESSION (octets ↓)
  #   et du CACHE (recharges suivantes plus légères).

